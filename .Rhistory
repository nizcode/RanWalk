#Question 1
#Has the destination [1,-3] reached after walking a 100 roads? returns a vector of Bool,
#as destination might have been reached twice. Therefore TRUE might have come up twice
TRUE%in%Destination(as.integer(c(-1,3)),100,seed = 19) #yes destination has been reached
sourceCpp("ranwalk.cpp")
#install.packages("Rcpp") # uncomment if not installed
library(Rcpp)
setwd("~/Masters/CProg/Assig2/RanWalk")
sourceCpp("ranwalk.cpp")
#Question 1
#Has the destination [1,-3] reached after walking a 100 roads? returns a vector of Bool,
#as destination might have been reached twice. Therefore TRUE might have come up twice
TRUE%in%Destination(as.integer(c(-1,3)),100,seed = 19) #yes destination has been reached
#by returning a vector of bools we can find out at which position the destionation was reached
which(Destination(as.integer(c(-1,3)),100,seed = 1)==TRUE) #It has been reached after walking 61 roads
Rcpp::sourceCpp("ranwalk.cpp")
#Question 1
#Has the destination [1,-3] reached after walking a 100 roads? returns a vector of Bool,
#as destination might have been reached twice. Therefore TRUE might have come up twice
TRUE%in%Destination(as.integer(c(-1,3)),100,seed = 2) #yes destination has been reached
sourceCpp("ranwalk.cpp")
#Question 1
#Has the destination [1,-3] reached after walking a 100 roads? returns a vector of Bool,
#as destination might have been reached twice. Therefore TRUE might have come up twice
TRUE%in%Destination(as.integer(c(-1,3)),100,seed = 3) #yes destination has been reached
#Question 1
#Has the destination [1,-3] reached after walking a 100 roads? returns a vector of Bool,
#as destination might have been reached twice. Therefore TRUE might have come up twice
TRUE%in%Destination(as.integer(c(-1,3)),100,seed = 4) #yes destination has been reached
#by returning a vector of bools we can find out at which position the destionation was reached
which(Destination(as.integer(c(-1,3)),100,seed = 4)==TRUE) #It has been reached after walking 61 roads
#----------
#Question 3
#----------
#compare the two walk functions
library(rbenchmark)
benchmark(walk(100,2),walk2(100,2),replications(100),order = "relative")
#----------
#Question 3
#----------
#compare the two walk functions
#library(rbenchmark)
#benchmark(walk(100,2),walk2(100,2),replications(100),order = "relative")
#error using benchmark error so it wont work - "Error in formula.default(object, env = baseenv()) : invalid formula"
#-------
#Using microbenchmark instead
library(microbenchmark)
microbenchmark(walk1 = {walk(100000,2)},walk2 = {walk2(100000,2)}, times = 1000L, unit = "milliseconds")
avgD <- c()
for(i in 1:1000){
avgD<-c(avgD,ManhattanD(50))
}
mean(avgD)
#Manhattan distance
avgD <- c()
for(i in 1:1000){
avgD<-c(avgD,ManhattanD(50))
}
#Manhattan distance
avgD <- c()
for(i in 1:1000){
avgD<-c(avgD,ManhattanD(50,3))
}
mean(avgD) # = 11 for walk2
avgD
#Manhattan distance
avgD <- c()
for(i in 1:1000){
avgD<-c(avgD,ManhattanD(50,i))
}
mean(avgD) # = 11 for walk2
summary(avgD)
Rcpp::sourceCpp("ranwalk.cpp")
#-- plot
ggplot(walk2(100,4), aes(x,y)) +
geom_path() +
geom_point(color = "red") +
transition_reveal(i)  +
labs(title = "Step {frame_along}") +
xlim(c(-10,10)) + ylim(c(-10,10))+
coord_fixed()
library(ggplot2)
library(ggplot2)
library(ggplot2)
#-- plot
ggplot(walk2(100,4), aes(x,y)) +
geom_path() +
geom_point(color = "red") +
transition_reveal(i)  +
labs(title = "Step {frame_along}") +
xlim(c(-10,10)) + ylim(c(-10,10))+
coord_fixed()
#-- plot
ggplot(data.frame(walk2(100,4)), aes(x,y)) +
geom_path() +
geom_point(color = "red") +
transition_reveal(i)  +
labs(title = "Step {frame_along}") +
xlim(c(-10,10)) + ylim(c(-10,10))+
coord_fixed()
library(gganimate)
library(gganimate)
#-- plot
ggplot(data.frame(walk2(100,4)), aes(x,y)) +
geom_path() +
geom_point(color = "red") +
transition_reveal(i)  +
labs(title = "Step {frame_along}") +
xlim(c(-10,10)) + ylim(c(-10,10))+
coord_fixed()
ggplot(data.frame(walk2(100,4)), aes(x,y)) +
geom_path() +
geom_point(color = "red") +
transition_reveal(i)  +
#labs(title = "Step {frame_along}") +
xlim(c(-10,10)) + ylim(c(-10,10))+
coord_fixed()
Rcpp::sourceCpp("ranwalk.cpp")
